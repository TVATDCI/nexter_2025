@use "../abstract" as vars;

.gallery {
  background-color: vars.$color-grey-light-1;
  grid-column: full-start / full-end;

  display: grid;
  grid-template-columns: repeat(8, 1fr); // 100% / 8 = 1fr (126.04px)
  grid-template-rows: repeat(7, 5vw); //
  grid-gap: 1rem;
  padding: 1rem;

  &__item {
    &--1 {
      grid-row: 1 / span 2;
      grid-column: 1 / span 2;
    }

    &--2 {
      grid-row: 1 / span 3;
      grid-column: 3 / span 3;
    }

    &--3 {
      grid-row: 1 / span 2;
      grid-column: 6 / span 1; // you can also use 6 / 7
    }

    &--4 {
      grid-row: 1 / span 2;
      grid-column: 7 / span 2; // you can also use 7 / -1
    }

    &--5 {
      grid-row: 3 / span 3;
      grid-column: 1 / span 2;
    }

    &--6 {
      grid-row: 4 / span 2;
      grid-column: 3 / span 2;
    }

    &--7 {
      grid-row: 4 / 5; // you can also use 4 / span 1
      grid-column: 5 / 6; // you can also use 5 / span 1
    }

    &--8 {
      grid-row: 3 / span 2;
      grid-column: 6 / span 2;
    }

    &--9 {
      grid-row: 3 / span 3;
      grid-column: 8 / 9; // you can also use 6 / span 1 or, 8 / -1
    }

    &--10 {
      grid-row: 6 / span 2;
      grid-column: 1 / 2; // you can also use 6 / span 1
    }

    &--11 {
      grid-row: 6 / span 2;
      grid-column: 2 / span 2;
    }

    &--12 {
      grid-row: 6 / span 2;
      grid-column: 4 / 5; // you can also use 4 / span 1
    }

    &--13 {
      grid-row: 5 / span 3;
      grid-column: 5 / span 3;
    }

    &--14 {
      grid-row: 6 / span 2;
      grid-column: 8 / 9; // you can also use 8 / span 1 or 8 / -1 NOTE! grid cell start with 0 if you want it to be the highest (987654321)number start first and the last goes with (-123456789) minor down!
    }
  }

  &__img {
    width: 100%; // img aspect ratio agin, the images re now given each a parent element with <figure> in html.
    height: 100%; // in order to position them effectively as planned. To keep them in cells, 100% Height & Width must also be declared to use object-fit: cover affectively.
    object-fit: cover;
    display: block; // is important here. So that the img does not get treated like inline-element(text)
  }
}
