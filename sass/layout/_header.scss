@use "../abstract" as vars;
@use "../abstract" as m;

.header {
  background-color: vars.$color-grey-dark-1;
  grid-column: full-start / col-end 6;
  background-image: linear-gradient(
      rgba(vars.$color-secondary, 0.93),
      rgba(vars.$color-secondary, 0.93)
    ),
    url(../img/hero.jpeg);
  background-size: cover;
  background-position: center;
  padding: 8rem;
  padding-top: 4rem;

  display: grid;
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;
  grid-template-columns: minmax(min-content, max-content);
  grid-row-gap: 1.5rem;
  justify-content: center;

  @include m.respond(large) {
    border: solid red 2px;
  }

  @include m.respond(medium) {
    grid-column: 1 / -1;
    border: solid red 2px;
  }

  @include m.respond(small) {
    padding: 5rem;
  }

  &__logo {
    height: 3rem;
    justify-self: center;
  }

  &__btn {
    align-self: start;
    justify-self: start;
  }

  /*create grid out of just one element with before and after, now it is 3 items in seenon-text!*/
  &__seenon-text {
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-column-gap: 1.5rem;
    align-items: center;

    font-size: 1.6rem;
    color: vars.$color-grey-light-2;

    &::before,
    &::after {
      content: "";
      height: 1px; /*1px is the lines before and after*/
      /*using background-color: currentColor to inherit the color from its own kind, in this case, seenon-text*/
      background-color: currentColor;
    }
  }
  &__seenon-logos {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-column-gap: 3rem;
    justify-items: center;
    align-items: center;

    img {
      max-height: 2.5rem;
      max-width: 100%;

      /*to tone down the img.by using filter 70% from 100% default*/
      filter: brightness(70%);
    }
  }
}
