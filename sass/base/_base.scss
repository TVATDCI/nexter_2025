// @use "../abstract" as *;
@use "../abstract" as vars;
// to avoid global name space (personal choice)
@use "../abstract" as m;

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%; // 10px/16px = 62.5% -> 1rem = 10px
  scroll-behavior: smooth;

  // desktop first layout
  // @media only screen and (max-width: vars.$bp-largest) {
  //  font-size: 50%; // 1 rem = 8px} or by @include
  @include m.respond(largest) {
    font-size: 50%; // 1rem = 8px
  }
}

body {
  font-family: vars.$font-primary;
  color: vars.$color-grey-dark-2;
  font-weight: 300;
  line-height: 1.6;
}

.container {
  display: grid;
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
  grid-template-columns:
    [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr)
    [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
    [center-end] minmax(6rem, 1fr) [full-end];

  @include m.respond(large) {
    grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
    grid-template-columns:
      [sidebar-start] 8rem [full-start] minmax(6rem, 1fr)
      [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
      [center-end] minmax(6rem, 1fr) [full-end];
  }

  @include m.respond(medium) {
    grid-template-rows: 6rem calc(100vh - 6rem) min-content 40vw repeat(
        3,
        min-content
      );
  }
}
